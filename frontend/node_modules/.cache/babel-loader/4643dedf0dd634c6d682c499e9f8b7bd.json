{"ast":null,"code":"var _jsxFileName = \"/home/duvan/duv-dev/pruebas/frontend/src/components/Showresult.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport '../styles/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Showresult(props) {\n  _s();\n\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const displayResult = props => {\n    const {\n      notes\n    } = props;\n\n    if (notes.length > 0) {\n      return notes.map((note, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Nombre de la empresa: \", note.Nombre_de_la_empresa]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"note_direction\",\n                children: [\"Direccion: \", note.Direccion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"note_nit\",\n                children: [\"NIT: \", note.NIT]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"note_telefono\",\n                children: [\"Telefono: \", note.Telefono]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 19\n              }, this)]\n            }, note.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"button_update\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"button_delete\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"empresas\",\n        children: \"No hay empresas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", displayResult(props), \" \"]\n  }, void 0, true);\n}\n\n_s(Showresult, \"36kd/W5/IXN96o8BVCrqsABVcBE=\");\n\n_c = Showresult;\nexport default Showresult;\n\nvar _c;\n\n$RefreshReg$(_c, \"Showresult\");","map":{"version":3,"sources":["/home/duvan/duv-dev/pruebas/frontend/src/components/Showresult.js"],"names":["React","Card","Button","Showresult","props","state","setState","useState","email","password","displayResult","notes","length","map","note","index","Nombre_de_la_empresa","Direccion","NIT","Telefono","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAO,sBAAP;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAlC;;AAEA,QAAMC,aAAa,GAAIN,KAAD,IAAW;AAE/B,UAAM;AAAEO,MAAAA;AAAF,QAAYP,KAAlB;;AAEA,QAAIO,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACpB,aACED,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,4BACE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA,qDAAmCD,IAAI,CAACE,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAG,gBAAA,SAAS,EAAC,gBAAb;AAAA,0CAA0CF,IAAI,CAACG,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAG,gBAAA,SAAS,EAAC,UAAb;AAAA,oCAA8BH,IAAI,CAACI,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAG,gBAAA,SAAS,EAAC,eAAb;AAAA,yCAAwCJ,IAAI,CAACK,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA,eAA2BL,IAAI,CAACM,EAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,IAAD,CAAM,MAAN;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA,WAAWL,KAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD,OAjBD,CADF;AAoBD,KArBD,MAqBO;AACL,0BAAQ;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;AAEF,GA7BD;;AA+BA,sBACE;AAAA,oBAAIL,aAAa,CAACN,KAAD,CAAjB;AAAA,kBADF;AAGD;;GAtCQD,U;;KAAAA,U;AAwCT,eAAeA,UAAf","sourcesContent":["import React, {  } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport '../styles/global.css';\n\nfunction Showresult(props) {\n\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n\n  const displayResult = (props) => {\n\n    const { notes } = props;\n\n    if (notes.length > 0) {\n      return (\n        notes.map((note, index) => {\n          return (\n            <Card key={index}>\n              <Card.Body>\n                <div className=\"note\" key={note.id}>\n                  <Card.Title>Nombre de la empresa: {note.Nombre_de_la_empresa}</Card.Title>\n                  <p className=\"note_direction\">Direccion: {note.Direccion}</p>\n                  <p className=\"note_nit\">NIT: {note.NIT}</p>\n                  <p className=\"note_telefono\">Telefono: {note.Telefono}</p>\n                </div>\n              </Card.Body>\n              <Card.Footer>\n                <Button className=\"button_update\">Update</Button>\n                <Button className=\"button_delete\">Delete</Button>\n              </Card.Footer>\n            </Card>\n          )\n        })\n      )\n    } else {\n      return (<h3 className=\"empresas\">No hay empresas.</h3>)\n    }\n\n  }\n\n  return (\n    <> {displayResult(props)} </>\n  )\n}\n\nexport default Showresult;\n"]},"metadata":{},"sourceType":"module"}