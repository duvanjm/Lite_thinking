{"ast":null,"code":"var _jsxFileName = \"/home/duvan/duv-dev/pruebas/frontend/src/components/Showresult.js\";\nimport React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport '../styles/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Showresult(props) {\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (state.email === \"\" || state.password === \"\") {\n      alert('Enter email and password');\n    } else {\n      const str = `${state.email}:${state.password}`;\n      const encodeData = btoa(str);\n\n      try {\n        await axios.get('http://localhost:5000/connect', {\n          headers: {\n            'Authorization': `Basic: ${encodeData}`\n          }\n        }).then(res => {\n          localStorage.setItem(\"token\", res.data.token);\n          axios.get('http://localhost:5000/users/me', {\n            headers: {\n              'X-Token': localStorage.getItem('token')\n            }\n          }).then(res => {\n            const name = res.data.email;\n            localStorage.setItem('name', name);\n            window.location = \"/dash/\" + name;\n          });\n        });\n      } catch (e) {\n        alert('Email or password invalid!');\n      }\n    }\n  };\n\n  const displayResult = props => {\n    const {\n      notes\n    } = props;\n\n    if (notes.length > 0) {\n      return notes.map((note, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Nombre de la empresa: \", note.Nombre_de_la_empresa]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"note_direction\",\n                children: [\"Direccion: \", note.Direccion]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"note_nit\",\n                children: [\"NIT: \", note.NIT]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"note_telefono\",\n                children: [\"Telefono: \", note.Telefono]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)]\n            }, note.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"button_update\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"button_delete\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"empresas\",\n        children: \"No hay empresas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayResult(props)\n  }, void 0, false);\n}\n\n_c = Showresult;\nexport default Showresult;\n\nvar _c;\n\n$RefreshReg$(_c, \"Showresult\");","map":{"version":3,"sources":["/home/duvan/duv-dev/pruebas/frontend/src/components/Showresult.js"],"names":["React","useState","Card","Button","axios","Showresult","props","handleSubmit","event","preventDefault","state","email","password","alert","str","encodeData","btoa","get","headers","then","res","localStorage","setItem","data","token","getItem","name","window","location","e","displayResult","notes","length","map","note","index","Nombre_de_la_empresa","Direccion","NIT","Telefono","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport '../styles/global.css';\n\nfunction Showresult(props) {\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (state.email === \"\" || state.password === \"\") {\n      alert('Enter email and password');\n    } else {\n      const str = `${state.email}:${state.password}`\n      const encodeData = btoa(str);\n      try {\n        await axios.get('http://localhost:5000/connect', { headers: { 'Authorization': `Basic: ${encodeData}`} })\n          .then((res) => {\n            localStorage.setItem(\"token\", res.data.token);\n            axios.get('http://localhost:5000/users/me', { headers: { 'X-Token': localStorage.getItem('token') } })\n              .then((res) => {\n                const name = res.data.email;\n                localStorage.setItem('name', name);\n                window.location = \"/dash/\" + name;\n              });\n        });\n      } catch(e) {\n        alert('Email or password invalid!');\n      }\n    }\n  }\n\n  const displayResult = (props) => {\n\n    const { notes } = props;\n\n    if (notes.length > 0) {\n      return (\n        notes.map((note, index) => {\n          return (\n            <Card key={index}>\n              <Card.Body>\n                <div className=\"note\" key={note.id}>\n                  <Card.Title>Nombre de la empresa: {note.Nombre_de_la_empresa}</Card.Title>\n                  <p className=\"note_direction\">Direccion: {note.Direccion}</p>\n                  <p className=\"note_nit\">NIT: {note.NIT}</p>\n                  <p className=\"note_telefono\">Telefono: {note.Telefono}</p>\n                </div>\n              </Card.Body>\n              <Card.Footer>\n                <Button className=\"button_update\">Update</Button>\n                <Button className=\"button_delete\">Delete</Button>\n              </Card.Footer>\n            </Card>\n          )\n        })\n      )\n    } else {\n      return (<h3 className=\"empresas\">No hay empresas.</h3>)\n    }\n\n  }\n\n  return (\n    <>\n      {displayResult(props)}\n    </>\n  )\n}\n\nexport default Showresult;\n"]},"metadata":{},"sourceType":"module"}